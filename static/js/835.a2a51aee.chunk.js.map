{"version":3,"file":"static/js/835.a2a51aee.chunk.js","mappings":"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","sources":["webpack://phonebook/./src/pages/contacts-page/styles.module.css?a780","webpack://phonebook/./src/components/ContactForm/styles.module.css?5005","components/ContactForm/ContactForm.jsx","webpack://phonebook/./src/components/ContactsList/styles.module.css?c1ff","components/ContactsList/Contactlist.jsx","webpack://phonebook/./src/components/Filter/styles.module.css?0bf3","components/Filter/Filter.jsx","components/LoadingScreen/LoadingScreen.jsx","pages/contacts-page/contactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"styles_wrapper__i5vFa\",\"fadeIn\":\"styles_fadeIn__nJOwP\",\"icon\":\"styles_icon__JK0YZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"formBox\":\"styles_formBox__3m3UG\",\"formButton\":\"styles_formButton__KX-mi\",\"label\":\"styles_label__LmsNk\",\"input\":\"styles_input__drtXr\"};","import { nanoid } from 'nanoid';\nimport { Formik, Field, Form } from 'formik';\nimport { BiUserPlus } from 'react-icons/bi';\nimport styles from './styles.module.css';\nimport { BsTelephonePlusFill } from 'react-icons/bs';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { useState } from 'react';\nimport {\n  useCreateContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contactsApi';\n\nconst ContactForm = () => {\n  const [createContact] = useCreateContactMutation();\n  const { data = [] } = useGetContactsQuery();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameId = nanoid();\n  const numberId = nanoid();\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contactFinder = data.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    if (!contactFinder) {\n      createContact(contact);\n      setName('');\n      setNumber('');\n    }\n    if (contactFinder) {\n      Report.failure(`${name} is already in contacts`, 'sorry');\n    }\n  };\n\n  return (\n    <Formik>\n      <Form onSubmit={handleSubmit} className={styles.formBox}>\n        <label className={styles.label}>\n          <BiUserPlus size={35} />\n          Name\n          <Field\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={name}\n            onChange={handleInputChange}\n            required\n            id={nameId}\n          />\n        </label>\n\n        <label className={styles.label}>\n          <BsTelephonePlusFill size={25} />\n          Number\n          <Field\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            value={number}\n            onChange={handleInputChange}\n            required\n            id={numberId}\n          />\n        </label>\n        <button type=\"submit\" className={styles.formButton}>\n          Add contact\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactButton\":\"styles_contactButton__lx8N9\"};","import styles from './styles.module.css';\nimport { Link, useLocation } from 'react-router-dom';\nimport { FaUserAltSlash } from 'react-icons/fa';\nimport { GrUpdate } from 'react-icons/gr';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/contactsSlice';\nimport { SpinnerCircular } from 'spinners-react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n} from 'redux/contacts/contactsApi';\nimport { useEffect } from 'react';\n\nconst Contacts = () => {\n  const { data, isFetching, refetch } = useGetContactsQuery();\n  const location = useLocation();\n  const [deleteContact] = useDeleteContactMutation();\n\n  const filter = useSelector(getFilter);\n\n  const filteredContacts = () => {\n    return data.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n  };\n\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  let rendered = filter === '' ? data : filteredContacts();\n\n  return (\n    <>\n      <ul>\n        <TransitionGroup component={null}>\n          {data &&\n            rendered.map(({ name, id, number }) => (\n              <CSSTransition key={id} timeout={500} classNames=\"item\">\n                <li key={id} id={id}>\n                  <span>{name} : </span>\n                  <span> {number}</span>\n                  <OverlayTrigger\n                    placement=\"bottom\"\n                    overlay={\n                      <Tooltip id=\"button-tooltip-2\">Click to update</Tooltip>\n                    }\n                  >\n                    <Link to={`update/${id}`} state={{ from: location }}>\n                      <button\n                        className={styles.contactButton}\n                        type=\"button\"\n                        aria-label=\"link to update contact page\"\n                      >\n                        <GrUpdate size={30} />\n                      </button>\n                    </Link>\n                  </OverlayTrigger>\n                  <OverlayTrigger\n                    placement=\"bottom\"\n                    overlay={\n                      <Tooltip id=\"button-tooltip-2\">Click to delete</Tooltip>\n                    }\n                  >\n                    <button\n                      className={styles.contactButton}\n                      type=\"button\"\n                      onClick={() => {\n                        deleteContact(id);\n                      }}\n                      aria-label=\"delete contact button\"\n                    >\n                      <FaUserAltSlash size={30} color={'red'} />\n                    </button>\n                  </OverlayTrigger>\n                </li>\n              </CSSTransition>\n            ))}\n        </TransitionGroup>\n      </ul>\n      {isFetching && (\n        <SpinnerCircular\n          size={47}\n          thickness={150}\n          speed={98}\n          color=\"rgba(57, 172, 59, 1)\"\n          secondaryColor=\"rgba(57, 158, 172, 0.58)\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"styles_label__cWZI-\",\"inputFiltr\":\"styles_inputFiltr__fvUjD\"};","import styles from './styles.module.css';\nimport { MdOutlineFindInPage } from 'react-icons/md';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter, getFilter } from 'redux/contacts/contactsSlice';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  return (\n    <label className={styles.label}>\n      <MdOutlineFindInPage size={30} />\n      Find contacts by name\n      <OverlayTrigger\n        placement=\"bottom\"\n        overlay={\n          <Tooltip id=\"filter input tooltip\">\n            Type here to find a contact\n          </Tooltip>\n        }\n      >\n        <input\n          className={styles.inputFiltr}\n          name=\"filter\"\n          value={filter}\n          onChange={e => dispatch(setFilter(e.currentTarget.value))}\n        />\n      </OverlayTrigger>\n    </label>\n  );\n};\n\nexport default Filter;\n","import { SpinnerDotted } from 'spinners-react';\n\nconst LoadingScreen = () => {\n  return (\n    <div\n      className=\"position-absolute top-50 start-50 translate-middle \"\n      aria-label=\"loading screen\"\n    >\n      <div className=\"d-flex justify-content-center\">\n        {' '}\n        <SpinnerDotted size={320} color={'white'} speed={150} />\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingScreen;\n","import styles from './styles.module.css';\nimport { toast } from 'react-toastify';\nimport ContactForm from 'components/ContactForm';\nimport Contacts from 'components/ContactsList';\nimport Filter from 'components/Filter';\nimport { useSelector } from 'react-redux';\nimport authSelectors from 'redux/auth/auth-selectors';\nimport authOperations from 'redux/auth/auth-operations';\nimport { useDispatch } from 'react-redux';\nimport LoadingScreen from 'components/LoadingScreen';\nimport { MdError } from 'react-icons/md';\nimport { useEffect } from 'react';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser())\n      .unwrap()\n      .catch(() => {\n        toast.error('Sorry, your authorization token expired, please relogin', {\n          icon: () => (\n            <>\n              <MdError size={24} color=\"var(--toastify-color-error)\" />\n            </>\n          ),\n        });\n        dispatch(authOperations.logOut());\n      });\n  }, [dispatch]);\n\n  const isFetchingCurrentUser = useSelector(\n    authSelectors.getIsFetchingCurrentUser\n  );\n  if (isFetchingCurrentUser) return <LoadingScreen />;\n\n  return (\n    <div className={styles.wrapper}>\n      <section>\n        <h1>Phonebook</h1>\n        <ContactForm />\n      </section>\n      <section>\n        <h2>Contacts</h2>\n        <Filter />\n        <Contacts />\n      </section>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["useCreateContactMutation","createContact","useGetContactsQuery","data","useState","name","setName","number","setNumber","nameId","nanoid","numberId","handleInputChange","e","target","value","onSubmit","preventDefault","contactFinder","find","contact","toLowerCase","id","Report","className","styles","size","type","pattern","title","onChange","required","isFetching","refetch","location","useLocation","useDeleteContactMutation","deleteContact","filter","useSelector","getFilter","useEffect","rendered","includes","trim","TransitionGroup","component","map","CSSTransition","timeout","classNames","OverlayTrigger","placement","overlay","Tooltip","to","state","from","onClick","color","SpinnerCircular","thickness","speed","secondaryColor","dispatch","useDispatch","setFilter","currentTarget","SpinnerDotted","authOperations","unwrap","catch","toast","icon","authSelectors"],"sourceRoot":""}